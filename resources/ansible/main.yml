---
- hosts: all
  gather_facts: False
  pre_tasks:
    - name: Install Python for Ansible
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
      register: output
      changed_when: output.stdout != ""
    - setup: # aka gather_facts
  tasks:
    - group:
        name: cocktailbot
        state: present

    - group:
        name: cocktailbot-www
        state: present

    - name: Create default user
      user:
        name: cocktailbot
        comment: "Cocktail Bot"
        group: cocktailbot
        state: present

    - name: Create www user
      user:
        name: cocktailbot-www
        comment: "Cocktail Bot"
        group: cocktailbot-www

    - file:
        path: /home/cocktailbot/go_workspace/{{ item }}
        state: directory
        owner: cocktailbot
        group: cocktailbot
        mode: 0755
      with_items:
        - 'bin'
        - 'src'
        - 'pkg'

    - name: Download Go
      get_url:
        url: https://storage.googleapis.com/golang/go1.8.linux-amd64.tar.gz
        dest: /home/cocktailbot/go1.8.linux-amd64.tar.gz
      register: download_go

    - name: Extract Go
      unarchive:
        src: /home/cocktailbot/go1.8.linux-amd64.tar.gz
        creates: /home/cocktailbot/go
        dest: /home/cocktailbot/
        remote_src: true

    - name: Move Go into place
      command: mv /home/cocktailbot/go /usr/local creates=/usr/local/go

    - name: Move bash_profile
      copy:
        src: files/.bash_profile
        dest: /home/cocktailbot
        owner: cocktailbot
        group: cocktailbot
        mode: 0644

    - apt_repository:
        repo: 'ppa:webupd8team/java'
        update_cache: yes

    - name: Agree to oracle license
      debconf: name=oracle-java8-installer question=shared/accepted-oracle-license-v1-1 vtype=select value=true

    - name: Install Java 8
      apt:
        name: oracle-java8-installer
        state: latest
        force: yes

    - apt_key: url=https://artifacts.elastic.co/GPG-KEY-elasticsearch state=present

    - apt_repository:
        repo: "deb https://artifacts.elastic.co/packages/5.x/apt stable main"
        update_cache: yes

    - name: Install Elasticsearch
      apt:
        name: elasticsearch
        state: latest

    - name: Copy Elasticsearch config
      copy:
        src: files/elasticsearch/{{ item }}
        dest: /etc/elasticsearch
      with_items:
        - elasticsearch.yml
        - jvm.options

    - name: Create swap file
      shell: |
        fallocate -l 1G /swapfile
        chmod 600 /swapfile
        mkswap /swapfile
        swapon /swapfile
        creates=/swapfile

    - service:
        name: elasticsearch
        enabled: yes
        state: started

    - name: Install go packages
      shell: |
        . /home/cocktailbot/.bash_profile
        go get gopkg.in/olivere/elastic.v5
      become: yes
      become_user: cocktailbot

    - name: Install app
      shell: |
        . ~/.bash_profile;
        go get -d -u github.com/cocktailbot/app/...;
        cd ~/go_workspace/src/github.com/cocktailbot/app;
        go run importer/cocktail.go --recipes resources/data/recipes.json;
        (cd ~/go_workspace/src/github.com/cocktailbot/app/site; go build server.go);
      become: yes
      become_user: cocktailbot

    - name: Build app
      shell: |
        . ~/.bash_profile;
        (cd ~/go_workspace/src/github.com/cocktailbot/app/site; go build server.go);
      become: yes
      become_user: cocktailbot

    - file:
        path: /var/log/webhook
        state: directory
        owner: cocktailbot-www
        group: cocktailbot-www
        mode: 0755

    - name: Install Supervisord
      apt:
        name: supervisor
        force: yes

    - name: Move Supervisord config
      copy:
        src: files/supervisor/{{ item }}
        dest: /etc/supervisor/{{ item }}
      with_items:
        - supervisord.conf
        - conf.d/webhooks.conf

    - service:
        name: supervisor
        enabled: yes
        state: restarted

    # https://serverfault.com/questions/112795/how-to-run-a-server-on-port-80-as-a-normal-user-on-linux
    - iptables:
        table: nat
        chain: PREROUTING
        protocol: tcp
        match: tcp
        destination_port: 80
        jump: REDIRECT
        to_ports: 8080
        comment: Redirect web traffic to port 8600
      become: yes

    - debug:
        msg="Go was downloaded"
      when: download_go|changed
